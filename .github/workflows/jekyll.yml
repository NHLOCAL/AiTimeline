# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write # <--- *** חשוב מאוד *** שונה מ-read ל-write כדי לאפשר commit אוטומטי
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      # ---------- הוספת השלבים המותאמים שלנו ----------
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Convert timeline.md to timeline.yml
        run: python scripts/convert_timeline_events.py _data/timeline.md
        
      - name: Commit converted timeline.yml
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Automated: Convert timeline.md to timeline.yml"
          file_pattern: _data/timeline.yml
      # ---------- סוף השלבים המותאמים שלנו ----------

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1 # שימוש בגרסה v1 שהיא יותר כללית ויציבה
        with:
          ruby-version: '3.1'
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
        
      - name: Build with Jekyll
        # שלב זה ירוץ לאחר שה-YML נוצר ובוצע לו commit, ולכן ישתמש בגרסה המעודכנת
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
