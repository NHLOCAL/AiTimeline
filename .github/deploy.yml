# .github/workflows/deploy.yml

name: Build and Deploy Jekyll Site

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. מוריד את קוד המאגר
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. מגדיר סביבת פייתון
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      # 3. מריץ את סקריפט ההמרה
      # ודא שהסקריפט שלך מקבל את הנתיב כארגומנט ולא משתמש ב-input()
      - name: Convert timeline.md to timeline.yml
        run: python scripts/convert_timeline_events.py _data/timeline.md
        
      # 4. מבצע commit אוטומטי לקובץ ה-YML אם הוא השתנה
      # <<< זהו התיקון העיקרי לפי ההמלצה שקיבלת >>>
      - name: Commit converted file
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Automated: Convert timeline.md to timeline.yml"
          # ודא שהפעולה מתמקדת רק בקובץ הספציפי הזה
          file_pattern: _data/timeline.yml

      # 5. מגדיר סביבת Ruby ו-Jekyll
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      # 6. מגדיר את GitHub Pages
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      # 7. בונה את אתר ה-Jekyll
      # שלב זה ישתמש בקובץ ה-YML המעודכן שנמצא על הרץ (runner)
      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      
      # 8. מעלה את האתר המוכן כ-artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './_site'

      # 9. פורס את ה-artifact ל-GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4